{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Business/Business.js","components/BusinessList/BusinessList.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","handleSortByChange","sortByOptions","sortByOption","this","setState","event","target","value","searchYelp","preventDefault","Object","keys","map","sortByOptionValue","className","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","React","Component","Business","src","business","imageSrc","alt","name","address","city","zipCode","category","toUpperCase","rating","reviewCount","BusinessList","businesses","id","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d85a019.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        };\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n\r\n        this.sortByOptions = {\r\n            'Best Match': 'best_match',\r\n            'Highest Rated': 'rating',\r\n            'Most Reviewed': 'review_count'\r\n        };\r\n    }\r\n\r\n    getSortByClass(sortByOption) {\r\n        if (this.state.sortBy === sortByOption) {\r\n          return 'active';\r\n        }\r\n        return '';\r\n    }\r\n    \r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption});\r\n    }\r\n    \r\n    handleTermChange(event) {\r\n        this.setState({term: event.target.value});\r\n    }\r\n    \r\n    handleLocationChange(event) {\r\n        this.setState({location: event.target.value});\r\n    }\r\n    \r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    \r\n        event.preventDefault();\r\n    }\r\n    \r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (<li className={this.getSortByClass(sortByOptionValue)}\r\n                        key={sortByOptionValue}\r\n                        onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n                      {sortByOption}\r\n                   </li>);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\r\n                    <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"Business\">\r\n          <div className=\"image-container\">\r\n            <img src={this.props.business.imageSrc} alt=''/>\r\n          </div>\r\n          <h2>{this.props.business.name}</h2>\r\n          <div className=\"Business-information\">\r\n            <div className=\"Business-address\">\r\n              <p>{this.props.business.address}</p>\r\n              <p>{this.props.business.city}</p>\r\n              <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\r\n            </div>\r\n            <div className=\"Business-reviews\">\r\n              <h3>{this.props.business.category.toUpperCase()}</h3>\r\n              <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\r\n              <p>{`${this.props.business.reviewCount} reviews`}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\n\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"BusinessList\">\r\n          {\r\n            this.props.businesses.map(business => {\r\n              return <Business business={business} key={business.id} />\r\n            })\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default BusinessList;","const apiKey = 'rxKWAXNM5kpIszg8t7XqPrbAyyBmfA1pwsEuKtaaWibTrXV8qAh0lWQyuE7gcDDzekcVXjqztQhscabDUHlqi4rgSMy6m1EMTiWTePknCcv8qtPbKJTaI5zhN7Z0X3Yx';\r\n\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    return fetch(`https://corsanywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(jsonResponse => {\r\n      if (jsonResponse.businesses) {\r\n        return jsonResponse.businesses.map(business => ({\r\n          id: business.id,\r\n          imageSrc: business.image_url,\r\n          name: business.name,\r\n          address: business.location.address1,\r\n          city: business.location.city,\r\n          state: business.location.state,\r\n          zipCode: business.location.zip_code,\r\n          category: business.categories[0].title,\r\n          rating: business.rating,\r\n          reviewCount: business.review_count\r\n        }));\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar';\nimport BusinessList from '../BusinessList/BusinessList';\n\nimport Yelp from '../../util/Yelp';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: []\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({businesses: businesses});\n    });\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}